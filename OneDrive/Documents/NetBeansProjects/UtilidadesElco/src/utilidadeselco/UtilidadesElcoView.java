/*
 * UtilidadesElcoView.java
 */
package utilidadeselco;

import java.awt.Component;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.text.DecimalFormat;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 * The application's main frame.
 */
public class UtilidadesElcoView extends FrameView {

    public UtilidadesElcoView(SingleFrameApplication app) {
        super(app);
        URL url = this.getClass().
                getResource("resources/utilidades.jpg");
        if (url != null) {
            ImageIcon icono = new ImageIcon(url);
            this.getFrame().setIconImage(icono.getImage());
        }
        this.getFrame().setAlwaysOnTop(true);
        initComponents();
        iniciarGui();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                //statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                //statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        //idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        //statusAnimationLabel.setIcon(idleIcon);
        //progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            @Override
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        //statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    //statusAnimationLabel.setIcon(idleIcon);
                    //progressBar.setVisible(false);
                    //progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String) (evt.getNewValue());
                    //statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer) (evt.getNewValue());
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(false);
                    //progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = UtilidadesElcoApp.getApplication().getMainFrame();
            aboutBox = new UtilidadesElcoAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        UtilidadesElcoApp.getApplication().show(aboutBox);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        tabbedPaneContenedor = new javax.swing.JTabbedPane();
        panelDescuentos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfFinal = new javax.swing.JTextField();
        tfIva = new javax.swing.JTextField();
        tfNeto = new javax.swing.JTextField();
        tfDto = new javax.swing.JTextField();
        tfUni = new javax.swing.JTextField();
        tfDtoUni = new javax.swing.JTextField();
        botonBorrarDescuentos = new javax.swing.JButton();
        panelSinIva = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfQuitarIva = new javax.swing.JTextField();
        tfPrecioConIva = new javax.swing.JTextField();
        tfPrecioSinIva = new javax.swing.JTextField();
        botonBorrarQuitar = new javax.swing.JButton();
        panelCalculadora = new javax.swing.JPanel();
        boton7 = new javax.swing.JButton();
        boton8 = new javax.swing.JButton();
        boton9 = new javax.swing.JButton();
        botonDividir = new javax.swing.JButton();
        botonBorrarTodo = new javax.swing.JButton();
        boton4 = new javax.swing.JButton();
        boton5 = new javax.swing.JButton();
        boton6 = new javax.swing.JButton();
        botonMultiplicar = new javax.swing.JButton();
        botonBorrarParcial = new javax.swing.JButton();
        boton1 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        boton3 = new javax.swing.JButton();
        botonRestar = new javax.swing.JButton();
        botonPorCiento = new javax.swing.JButton();
        boton0 = new javax.swing.JButton();
        botonComa = new javax.swing.JButton();
        botonIgual = new javax.swing.JButton();
        botonSumar = new javax.swing.JButton();
        botonMasMenos = new javax.swing.JButton();
        tfTotalCalculadora = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfIvaMercancia = new javax.swing.JTextField();
        tfUdsMercancia = new javax.swing.JTextField();
        tfPrecioMercancia = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tfIvaDescuento = new javax.swing.JTextField();
        tfUdsDescuento = new javax.swing.JTextField();
        tfPrecioDescuento = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        tfFinalDtoDinero = new javax.swing.JTextField();
        botonBorrar = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        ayudaMenuItem = new javax.swing.JMenuItem();
        //jTextFieldNumeros2 = new //misClases.utilidades.swing.JTextFieldNumeros();
        jPanel4 = new javax.swing.JPanel();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(utilidadeselco.UtilidadesElcoApp.class).getContext().getResourceMap(UtilidadesElcoView.class);
        tabbedPaneContenedor.setBackground(resourceMap.getColor("tabbedPaneContenedor.background")); // NOI18N
        tabbedPaneContenedor.setForeground(resourceMap.getColor("tabbedPaneContenedor.foreground")); // NOI18N
        tabbedPaneContenedor.setFocusable(false);
        tabbedPaneContenedor.setName("tabbedPaneContenedor"); // NOI18N
        tabbedPaneContenedor.setRequestFocusEnabled(false);
        tabbedPaneContenedor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneContenedorStateChanged(evt);
            }
        });

        panelDescuentos.setName("panelDescuentos"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setFocusable(false);
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setRequestFocusEnabled(false);
        jLabel1.setVerifyInputWhenFocusTarget(false);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setFocusable(false);
        jLabel2.setName("jLabel2"); // NOI18N
        jLabel2.setRequestFocusEnabled(false);
        jLabel2.setVerifyInputWhenFocusTarget(false);

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setFocusable(false);
        jLabel3.setName("jLabel3"); // NOI18N
        jLabel3.setRequestFocusEnabled(false);
        jLabel3.setVerifyInputWhenFocusTarget(false);

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setFocusable(false);
        jLabel4.setName("jLabel4"); // NOI18N
        jLabel4.setRequestFocusEnabled(false);
        jLabel4.setVerifyInputWhenFocusTarget(false);

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setFocusable(false);
        jLabel5.setName("jLabel5"); // NOI18N
        jLabel5.setRequestFocusEnabled(false);
        jLabel5.setVerifyInputWhenFocusTarget(false);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setFocusable(false);
        jLabel6.setName("jLabel6"); // NOI18N
        jLabel6.setRequestFocusEnabled(false);
        jLabel6.setVerifyInputWhenFocusTarget(false);

        tfFinal.setBackground(resourceMap.getColor("tfFinal.background")); // NOI18N
        tfFinal.setFont(resourceMap.getFont("tfFinal.font")); // NOI18N
        tfFinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfFinal.setText(resourceMap.getString("tfFinal.text")); // NOI18N
        tfFinal.setFocusable(false);
        tfFinal.setName("tfFinal"); // NOI18N

        tfIva.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfIva.setText(resourceMap.getString("tfIva.text")); // NOI18N
        tfIva.setName("tfIva"); // NOI18N
        tfIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfIva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescuentosKeyPressed(evt);
            }
        });

        tfNeto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfNeto.setText(resourceMap.getString("tfNeto.text")); // NOI18N
        tfNeto.setDragEnabled(true);
        tfNeto.setName("tfNeto"); // NOI18N
        tfNeto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfNeto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescuentosKeyPressed(evt);
            }
        });

        tfDto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfDto.setText(resourceMap.getString("tfDto.text")); // NOI18N
        tfDto.setDragEnabled(true);
        tfDto.setName("tfDto"); // NOI18N
        tfDto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfDto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescuentosKeyPressed(evt);
            }
        });

        tfUni.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfUni.setText(resourceMap.getString("tfUni.text")); // NOI18N
        tfUni.setName("tfUni"); // NOI18N
        tfUni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfUni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescuentosKeyPressed(evt);
            }
        });

        tfDtoUni.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfDtoUni.setText(resourceMap.getString("tfDtoUni.text")); // NOI18N
        tfDtoUni.setName("tfDtoUni"); // NOI18N
        tfDtoUni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfDtoUni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDescuentosKeyPressed(evt);
            }
        });

        botonBorrarDescuentos.setText(resourceMap.getString("botonBorrarDescuentos.text")); // NOI18N
        botonBorrarDescuentos.setName("botonBorrarDescuentos"); // NOI18N
        botonBorrarDescuentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarDescuentosMercanciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDescuentosLayout = new javax.swing.GroupLayout(panelDescuentos);
        panelDescuentos.setLayout(panelDescuentosLayout);
        panelDescuentosLayout.setHorizontalGroup(
            panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDescuentosLayout.createSequentialGroup()
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(29, 29, 29)
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfFinal, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .addComponent(tfIva, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDto)
                    .addComponent(tfNeto)
                    .addComponent(tfUni)
                    .addComponent(tfDtoUni, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonBorrarDescuentos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDescuentosLayout.setVerticalGroup(
            panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDescuentosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfDto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(tfDtoUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDescuentosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBorrarDescuentos))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        tabbedPaneContenedor.addTab(resourceMap.getString("panelDescuentos.TabConstraints.tabTitle"), panelDescuentos); // NOI18N

        panelSinIva.setName("panelSinIva"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setFocusable(false);
        jLabel7.setName("jLabel7"); // NOI18N
        jLabel7.setRequestFocusEnabled(false);
        jLabel7.setVerifyInputWhenFocusTarget(false);

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setFocusable(false);
        jLabel8.setName("jLabel8"); // NOI18N
        jLabel8.setRequestFocusEnabled(false);
        jLabel8.setVerifyInputWhenFocusTarget(false);

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setFocusable(false);
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setRequestFocusEnabled(false);
        jLabel9.setVerifyInputWhenFocusTarget(false);

        tfQuitarIva.setText(resourceMap.getString("tfQuitarIva.text")); // NOI18N
        tfQuitarIva.setName("tfQuitarIva"); // NOI18N
        tfQuitarIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfQuitarIva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfQuitarIvaKeyPressed(evt);
            }
        });

        tfPrecioConIva.setText(resourceMap.getString("tfPrecioConIva.text")); // NOI18N
        tfPrecioConIva.setName("tfPrecioConIva"); // NOI18N
        tfPrecioConIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfPrecioConIva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfQuitarIvaKeyPressed(evt);
            }
        });

        tfPrecioSinIva.setBackground(resourceMap.getColor("tfPrecioSinIva.background")); // NOI18N
        tfPrecioSinIva.setFont(resourceMap.getFont("tfPrecioSinIva.font")); // NOI18N
        tfPrecioSinIva.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfPrecioSinIva.setText(resourceMap.getString("tfPrecioSinIva.text")); // NOI18N
        tfPrecioSinIva.setFocusable(false);
        tfPrecioSinIva.setName("tfPrecioSinIva"); // NOI18N

        botonBorrarQuitar.setText(resourceMap.getString("botonBorrarQuitar.text")); // NOI18N
        botonBorrarQuitar.setName("botonBorrarQuitar"); // NOI18N
        botonBorrarQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSinIvaLayout = new javax.swing.GroupLayout(panelSinIva);
        panelSinIva.setLayout(panelSinIvaLayout);
        panelSinIvaLayout.setHorizontalGroup(
            panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSinIvaLayout.createSequentialGroup()
                .addGroup(panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfPrecioConIva)
                    .addComponent(tfPrecioSinIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfQuitarIva, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonBorrarQuitar)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        panelSinIvaLayout.setVerticalGroup(
            panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSinIvaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfQuitarIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfPrecioConIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSinIvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfPrecioSinIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBorrarQuitar))
                .addContainerGap(188, Short.MAX_VALUE))
        );

        tabbedPaneContenedor.addTab(resourceMap.getString("panelSinIva.TabConstraints.tabTitle"), panelSinIva); // NOI18N

        panelCalculadora.setName("panelCalculadora"); // NOI18N

        boton7.setText(resourceMap.getString("boton7.text")); // NOI18N
        boton7.setFocusable(false);
        boton7.setName("boton7"); // NOI18N
        boton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton8.setText(resourceMap.getString("boton8.text")); // NOI18N
        boton8.setFocusable(false);
        boton8.setName("boton8"); // NOI18N
        boton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton9.setText(resourceMap.getString("boton9.text")); // NOI18N
        boton9.setFocusable(false);
        boton9.setName("boton9"); // NOI18N
        boton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonDividir.setText(resourceMap.getString("botonDividir.text")); // NOI18N
        botonDividir.setFocusable(false);
        botonDividir.setName("botonDividir"); // NOI18N
        botonDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonBorrarTodo.setText(resourceMap.getString("botonBorrarTodo.text")); // NOI18N
        botonBorrarTodo.setFocusable(false);
        botonBorrarTodo.setName("botonBorrarTodo"); // NOI18N
        botonBorrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton4.setText(resourceMap.getString("boton4.text")); // NOI18N
        boton4.setFocusable(false);
        boton4.setName("boton4"); // NOI18N
        boton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton5.setText(resourceMap.getString("boton5.text")); // NOI18N
        boton5.setFocusable(false);
        boton5.setName("boton5"); // NOI18N
        boton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton6.setText(resourceMap.getString("boton6.text")); // NOI18N
        boton6.setFocusable(false);
        boton6.setName("boton6"); // NOI18N
        boton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonMultiplicar.setText(resourceMap.getString("botonMultiplicar.text")); // NOI18N
        botonMultiplicar.setFocusable(false);
        botonMultiplicar.setName("botonMultiplicar"); // NOI18N
        botonMultiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonBorrarParcial.setText(resourceMap.getString("botonBorrarParcial.text")); // NOI18N
        botonBorrarParcial.setFocusable(false);
        botonBorrarParcial.setName("botonBorrarParcial"); // NOI18N
        botonBorrarParcial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton1.setText(resourceMap.getString("boton1.text")); // NOI18N
        boton1.setFocusable(false);
        boton1.setName("boton1"); // NOI18N
        boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton2.setText(resourceMap.getString("boton2.text")); // NOI18N
        boton2.setFocusable(false);
        boton2.setName("boton2"); // NOI18N
        boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton3.setText(resourceMap.getString("boton3.text")); // NOI18N
        boton3.setFocusable(false);
        boton3.setName("boton3"); // NOI18N
        boton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonRestar.setText(resourceMap.getString("botonRestar.text")); // NOI18N
        botonRestar.setFocusable(false);
        botonRestar.setName("botonRestar"); // NOI18N
        botonRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonPorCiento.setText(resourceMap.getString("botonPorCiento.text")); // NOI18N
        botonPorCiento.setFocusable(false);
        botonPorCiento.setName("botonPorCiento"); // NOI18N
        botonPorCiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        boton0.setText(resourceMap.getString("boton0.text")); // NOI18N
        boton0.setFocusable(false);
        boton0.setName("boton0"); // NOI18N
        boton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonComa.setText(resourceMap.getString("botonComa.text")); // NOI18N
        botonComa.setFocusable(false);
        botonComa.setName("botonComa"); // NOI18N
        botonComa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonIgual.setText(resourceMap.getString("botonIgual.text")); // NOI18N
        botonIgual.setFocusable(false);
        botonIgual.setName("botonIgual"); // NOI18N
        botonIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonSumar.setText(resourceMap.getString("botonSumar.text")); // NOI18N
        botonSumar.setFocusable(false);
        botonSumar.setName("botonSumar"); // NOI18N
        botonSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        botonMasMenos.setText(resourceMap.getString("botonMasMenos.text")); // NOI18N
        botonMasMenos.setFocusable(false);
        botonMasMenos.setName("botonMasMenos"); // NOI18N
        botonMasMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalculadoraActionPerformed(evt);
            }
        });

        tfTotalCalculadora.setBackground(resourceMap.getColor("tfTotalCalculadora.background")); // NOI18N
        tfTotalCalculadora.setEditable(false);
        tfTotalCalculadora.setFont(resourceMap.getFont("tfTotalCalculadora.font")); // NOI18N
        tfTotalCalculadora.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfTotalCalculadora.setText(resourceMap.getString("tfTotalCalculadora.text")); // NOI18N
        tfTotalCalculadora.setName("tfTotalCalculadora"); // NOI18N
        tfTotalCalculadora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                botonCalculadoraKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelCalculadoraLayout = new javax.swing.GroupLayout(panelCalculadora);
        panelCalculadora.setLayout(panelCalculadoraLayout);
        panelCalculadoraLayout.setHorizontalGroup(
            panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalculadoraLayout.createSequentialGroup()
                .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCalculadoraLayout.createSequentialGroup()
                        .addComponent(boton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonDividir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonBorrarTodo))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCalculadoraLayout.createSequentialGroup()
                        .addComponent(boton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonMultiplicar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBorrarParcial))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCalculadoraLayout.createSequentialGroup()
                        .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCalculadoraLayout.createSequentialGroup()
                                .addComponent(boton0)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonComa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonIgual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCalculadoraLayout.createSequentialGroup()
                                .addComponent(boton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boton3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonRestar)
                            .addComponent(botonSumar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonMasMenos)
                            .addComponent(botonPorCiento)))
                    .addComponent(tfTotalCalculadora, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        panelCalculadoraLayout.setVerticalGroup(
            panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalculadoraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton7)
                    .addComponent(boton8)
                    .addComponent(boton9)
                    .addComponent(botonDividir)
                    .addComponent(botonBorrarTodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton4)
                    .addComponent(boton5)
                    .addComponent(boton6)
                    .addComponent(botonMultiplicar)
                    .addComponent(botonBorrarParcial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton1)
                    .addComponent(boton2)
                    .addComponent(boton3)
                    .addComponent(botonRestar)
                    .addComponent(botonPorCiento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCalculadoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton0)
                    .addComponent(botonComa)
                    .addComponent(botonIgual)
                    .addComponent(botonSumar)
                    .addComponent(botonMasMenos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfTotalCalculadora, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        tabbedPaneContenedor.addTab(resourceMap.getString("panelCalculadora.TabConstraints.tabTitle"), panelCalculadora); // NOI18N

        jPanel1.setName("panelDtoDinero"); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel2.border.title"), javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION)); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        tfIvaMercancia.setText(resourceMap.getString("tfIvaMercancia.text")); // NOI18N
        tfIvaMercancia.setName("tfIvaMercancia"); // NOI18N
        tfIvaMercancia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfIvaMercancia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDtoDineroKeyPressed(evt);
            }
        });

        tfUdsMercancia.setText(resourceMap.getString("tfUdsMercancia.text")); // NOI18N
        tfUdsMercancia.setName("tfUdsMercancia"); // NOI18N
        tfUdsMercancia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfUdsMercancia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDtoDineroKeyPressed(evt);
            }
        });

        tfPrecioMercancia.setText(resourceMap.getString("tfPrecioMercancia.text")); // NOI18N
        tfPrecioMercancia.setName("tfPrecioMercancia"); // NOI18N
        tfPrecioMercancia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfPrecioMercancia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDtoDineroKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfIvaMercancia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUdsMercancia, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .addComponent(tfPrecioMercancia))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfIvaMercancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfUdsMercancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tfPrecioMercancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jPanel3.border.title"), javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION)); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        tfIvaDescuento.setText(resourceMap.getString("tfIvaDescuento.text")); // NOI18N
        tfIvaDescuento.setName("tfIvaDescuento"); // NOI18N
        tfIvaDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfIvaDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDtoDineroKeyPressed(evt);
            }
        });

        tfUdsDescuento.setText(resourceMap.getString("tfUdsDescuento.text")); // NOI18N
        tfUdsDescuento.setName("tfUdsDescuento"); // NOI18N
        tfUdsDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfUdsDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDtoDineroKeyPressed(evt);
            }
        });

        tfPrecioDescuento.setText(resourceMap.getString("trPrecioDescuento.text")); // NOI18N
        tfPrecioDescuento.setName("trPrecioDescuento"); // NOI18N
        tfPrecioDescuento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfDescuentosFocusGained(evt);
            }
        });
        tfPrecioDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfDtoDineroKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfIvaDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUdsDescuento, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(tfPrecioDescuento))
                .addContainerGap(126, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(tfIvaDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(tfUdsDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tfPrecioDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setName("jPanel5"); // NOI18N

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        tfFinalDtoDinero.setBackground(resourceMap.getColor("tfFinalDtoDinero.background")); // NOI18N
        tfFinalDtoDinero.setFont(resourceMap.getFont("tfFinalDtoDinero.font")); // NOI18N
        tfFinalDtoDinero.setText(resourceMap.getString("tfFinalDtoDinero.text")); // NOI18N
        tfFinalDtoDinero.setFocusable(false);
        tfFinalDtoDinero.setName("tfFinalDtoDinero"); // NOI18N

        botonBorrar.setText(resourceMap.getString("botonBorrar.text")); // NOI18N
        botonBorrar.setName("botonBorrar"); // NOI18N
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarDescuentosDineroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfFinalDtoDinero, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonBorrar)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(tfFinalDtoDinero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBorrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPaneContenedor.addTab(resourceMap.getString("panelDtoDinero.TabConstraints.tabTitle"), jPanel1); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPaneContenedor.getAccessibleContext().setAccessibleName(resourceMap.getString("tabbedPaneSinIva.AccessibleContext.accessibleName")); // NOI18N

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(utilidadeselco.UtilidadesElcoApp.class).getContext().getActionMap(UtilidadesElcoView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        ayudaMenuItem.setText(resourceMap.getString("ayudaMenuItem.text")); // NOI18N
        ayudaMenuItem.setName("ayudaMenuItem"); // NOI18N
        ayudaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(ayudaMenuItem);

        menuBar.add(helpMenu);

        //jTextFieldNumeros2.setText(resourceMap.getString("jTextFieldNu//meros2.text")); // NOI18N
        //jTextFieldNumeros2.setName("jTextFieldNumeros2"); // //NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void tfDescuentosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDescuentosFocusGained
        JTextField c = (JTextField) evt.getComponent();
        c.selectAll();
}//GEN-LAST:event_tfDescuentosFocusGained

    private void tfDescuentosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescuentosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Component comp = evt.getComponent();
            this.calcularPrecioFinal();
            String n = comp.getName();
            if (n.equalsIgnoreCase(this.tfIva.getName())) {
                this.tfNeto.requestFocusInWindow();
                //this.statusMessageLabel.setText
                //("IVA actual: " + this.tfIva.getText() + "%");
            } else if (n.equalsIgnoreCase(this.tfNeto.getName())) {
                this.tfDto.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfDto.getName())) {
                this.tfUni.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfUni.getName())) {
                this.tfDtoUni.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfDtoUni.getName())) {
                this.tfNeto.requestFocusInWindow();
            }
        }
}//GEN-LAST:event_tfDescuentosKeyPressed

    private void ayudaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaMenuItemActionPerformed
        String mensaje = "Para aplicar descuentos en cadena\n"
                + "escríbalos separados por la barra \' / \'\n"
                + "de esta forma: 10.5/5.32/1.37";
        JOptionPane.showMessageDialog(this.getFrame(),
                mensaje, "Ayuda", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ayudaMenuItemActionPerformed

    private void botonBorrarDescuentosMercanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarDescuentosMercanciaActionPerformed
        this.tfNeto.setText(this.ceroPuntocero);
        this.tfDto.setText(this.ceroPuntocero);
        this.tfUni.setText(this.cero);
        this.tfDtoUni.setText(this.cero);
        this.tfFinal.setText("0,00 €");
        this.tfNeto.requestFocusInWindow();
}//GEN-LAST:event_botonBorrarDescuentosMercanciaActionPerformed

    private void botonBorrarQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarQuitarActionPerformed
        this.tfQuitarIva.setText(this.ceroPuntocero);
        this.tfPrecioConIva.setText(this.ceroPuntocero);
        this.tfPrecioSinIva.setText("0,00 €");
        this.tfQuitarIva.requestFocusInWindow();
    }//GEN-LAST:event_botonBorrarQuitarActionPerformed

    private void tfQuitarIvaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfQuitarIvaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Component comp = evt.getComponent();
            this.calcularPrecioSinIva();
            String n = comp.getName();
            if (n.equalsIgnoreCase(this.tfQuitarIva.getName())) {
                this.tfPrecioConIva.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfPrecioConIva.getName())) {
                this.tfQuitarIva.requestFocusInWindow();
            }
        }
    }//GEN-LAST:event_tfQuitarIvaKeyPressed

    private void tabbedPaneContenedorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneContenedorStateChanged
        //this.statusMessageLabel.setText("");
    }//GEN-LAST:event_tabbedPaneContenedorStateChanged

    private void mostrarDatos(double datos) {
        this.tfTotalCalculadora.setText(String.valueOf(datos));
    }

    private void mostrarDatos(String datos) {
        this.tfTotalCalculadora.setText(datos);
    }

    private void aumentarDigito(String dato) {
        if (this.tfTotalCalculadora.getText().equalsIgnoreCase("0")) {
            this.tfTotalCalculadora.setText("");
        }
        mostrarDatos(this.tfTotalCalculadora.getText() + dato);
    }

    private Double getCifraPantalla() {
        return Double.parseDouble(this.tfTotalCalculadora.getText());
    }

    private String getStringPantalla() {
        return this.tfTotalCalculadora.getText();
    }

    private void calcular() {
        if (this.primeraOperacion) {
            this.operador1 = this.getCifraPantalla();
            this.primeraOperacion = false;
            return;
        } else {
            this.operador2 = this.getCifraPantalla();
        }
        if (this.operadorActivo != null) {
            double total = this.aplicarOperadorActivo();
            this.mostrarDatos(this.redondear(total, 5));
            this.operador1 = total;
            this.operador2 = 0.0d;
        }
    }

    private void calcularTantoPorCiento() {
        if (this.operadorActivo == null) {
            return;
        }
        this.operador2 = this.getCifraPantalla();
        double multiplicador = this.operador2 / 100;
        double cantidad = this.operador1 * multiplicador;
        double total = 0.0d;
        switch (this.operadorActivo.charAt(0)) {
            case '+':
                total = this.operador1 + cantidad;
                break;
            case '-':
                total = this.operador1 - cantidad;
                break;
            case '*':
                total = this.operador1 * multiplicador;
                break;
            case '/':
                total = this.operador1 / multiplicador;
                break;
            default:
                break;
        }
        this.mostrarDatos(this.redondear(total, 5));
        this.operador1 = total;
        this.operador2 = 0.0d;
        this.operadorActivo = null;
        this.entradaActual = Entradas.NINGUNA;
    }

    private double aplicarOperadorActivo() {
        double total = 0.0d;
        char op = this.operadorActivo.charAt(0);
        switch (op) {
            case '+':
                total = this.operador1 + this.operador2;
                break;
            case '-':
                total = this.operador1 - this.operador2;
                break;
            case '*':
                total = this.operador1 * this.operador2;
                break;
            case '/':
                total = this.operador1 / this.operador2;
                break;
            default:
                break;
        }
        total = this.redondear(total, 5);
        return total;
    }

    private double redondear(double numero, int digitos) {
        int cifras = (int) Math.pow(10, digitos);
        return Math.rint(numero * cifras) / cifras;
    }

    private void botonCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalculadoraActionPerformed
        String datoTecleado = evt.getActionCommand();
        try {
            double n = Double.parseDouble(datoTecleado);
            if (this.entradaActual == Entradas.DIGITO
                    || this.entradaActual == Entradas.NINGUNA
                    || this.entradaActual == Entradas.PUNTO) {
                if (this.entradaActual == Entradas.NINGUNA) {
                    this.primeraOperacion = true;
                    this.comaActivada = false;
                    this.operador1 = 0.0d;
                    this.operador2 = 0.0d;
                    this.tfTotalCalculadora.setText("");
                } else if (this.entradaActual == Entradas.PUNTO) {
                    if (this.tfTotalCalculadora.getText().equalsIgnoreCase("0")
                            || this.tfTotalCalculadora.getText().equalsIgnoreCase("")) {
                        this.mostrarDatos("0.");
                    } else {
                        this.aumentarDigito(".");
                    }
                }
                this.aumentarDigito(datoTecleado);
                this.entradaActual = Entradas.DIGITO;
            } else if (this.entradaActual == Entradas.OPERADOR) {
                if (this.getStringPantalla().equalsIgnoreCase("0.")) {
                    this.aumentarDigito(datoTecleado);
                } else {
                    this.mostrarDatos(datoTecleado);
                }
                //this.mostrarDatos(datoTecleado);
                this.entradaActual = Entradas.DIGITO;
            }
        } catch (NumberFormatException ex) {
            String c = datoTecleado;
            if (c.equalsIgnoreCase("+")
                    || c.equalsIgnoreCase("-")
                    || c.equalsIgnoreCase("*")
                    || c.equalsIgnoreCase("/")
                    || c.equalsIgnoreCase("=")) {
                this.comaActivada = false;
                if (this.entradaActual == Entradas.OPERADOR) {
                    this.operadorActivo = c;
                } else {
                    calcular();
                }
                if (!c.equalsIgnoreCase("=")) {
                    this.operadorActivo = c;
                    this.entradaActual = Entradas.OPERADOR;
                } else {
                    this.entradaActual = Entradas.NINGUNA;
                    this.operadorActivo = null;
                }
            } else if (c.equalsIgnoreCase("C")) {
                this.primeraOperacion = true;
                this.operadorActivo = null;
                this.operador1 = 0.0d;
                this.operador2 = 0.0d;
                this.entradaActual = Entradas.NINGUNA;
                this.tfTotalCalculadora.setText(cero);
            } else if (c.equalsIgnoreCase("CE")) {
                if (this.entradaActual == Entradas.NINGUNA) {
                    this.botonBorrarTodo.doClick();
                } else {
                    this.borrarPantalla();
                    this.mostrarDatos(cero);
                }
            } else if (c.equalsIgnoreCase(",")) {
                if (this.entradaActual == Entradas.OPERADOR) {
                    this.mostrarDatos("0.");
                    this.comaActivada = true;
                    return;
                }
                if (this.comaActivada == false) {
                    this.entradaActual = Entradas.PUNTO;
                    this.comaActivada = true;
                }
            } else if (c.equalsIgnoreCase("%")) {
                this.calcularTantoPorCiento();
            } else if (c.equalsIgnoreCase("+-")) {
                if (this.getStringPantalla().equalsIgnoreCase("")
                        || this.getStringPantalla().equalsIgnoreCase(cero)
                        || this.getStringPantalla().equalsIgnoreCase("0.")
                        || this.getStringPantalla().equalsIgnoreCase(ceroPuntocero)) {
                    return;
                }
                if (this.entradaActual == Entradas.NINGUNA) {
                    this.operador1 = this.operador1 * -1;
                }
                if (this.getStringPantalla().charAt(0) == '-') {
                    this.mostrarDatos(this.getStringPantalla().substring(1));
                } else {
                    this.mostrarDatos("-" + this.getStringPantalla());
                }
            }
        }
    }//GEN-LAST:event_botonCalculadoraActionPerformed

    private void borrarPantalla() {
        this.tfTotalCalculadora.setText("");
    }

    private void botonCalculadoraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_botonCalculadoraKeyPressed
        int c = evt.getKeyCode();
        switch (c) {
            case KeyEvent.VK_NUMPAD0:
                this.boton0.doClick();
                break;
            case KeyEvent.VK_NUMPAD1:
                this.boton1.doClick();
                break;
            case KeyEvent.VK_NUMPAD2:
                this.boton2.doClick();
                break;
            case KeyEvent.VK_NUMPAD3:
                this.boton3.doClick();
                break;
            case KeyEvent.VK_NUMPAD4:
                this.boton4.doClick();
                break;
            case KeyEvent.VK_NUMPAD5:
                this.boton5.doClick();
                break;
            case KeyEvent.VK_NUMPAD6:
                this.boton6.doClick();
                break;
            case KeyEvent.VK_NUMPAD7:
                this.boton7.doClick();
                break;
            case KeyEvent.VK_NUMPAD8:
                this.boton8.doClick();
                break;
            case KeyEvent.VK_NUMPAD9:
                this.boton9.doClick();
                break;
            case KeyEvent.VK_ADD:
                this.botonSumar.doClick();
                break;
            case KeyEvent.VK_SUBTRACT:
                this.botonRestar.doClick();
                break;
            case KeyEvent.VK_MULTIPLY:
                this.botonMultiplicar.doClick();
                break;
            case KeyEvent.VK_DIVIDE:
                this.botonDividir.doClick();
                break;
            case KeyEvent.VK_DECIMAL:
                this.botonComa.doClick();
                break;
            case KeyEvent.VK_ENTER:
                this.botonIgual.doClick();
                break;
            case KeyEvent.VK_C:
                this.botonBorrarTodo.doClick();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_botonCalculadoraKeyPressed

    private void tfDtoDineroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDtoDineroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER
                || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Component comp = evt.getComponent();
            this.calcularDescuentoDinero();
            String n = comp.getName();
            if (n.equalsIgnoreCase(this.tfIvaMercancia.getName())) {
                this.tfUdsMercancia.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfUdsMercancia.getName())) {
                this.tfPrecioMercancia.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfPrecioMercancia.getName())) {
                this.tfIvaDescuento.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfIvaDescuento.getName())) {
                this.tfUdsDescuento.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfUdsDescuento.getName())) {
                this.tfPrecioDescuento.requestFocusInWindow();
            } else if (n.equalsIgnoreCase(this.tfPrecioDescuento.getName())) {
                this.tfIvaMercancia.requestFocusInWindow();
            }
        }
    }//GEN-LAST:event_tfDtoDineroKeyPressed

    private void botonBorrarDescuentosDineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarDescuentosDineroActionPerformed
        this.tfFinalDtoDinero.setText("0,00 €");
        this.tfIvaDescuento.setText(this.ceroPuntocero);
        this.tfIvaMercancia.setText(this.ceroPuntocero);
        this.tfPrecioDescuento.setText(this.ceroPuntocero);
        this.tfPrecioMercancia.setText(this.ceroPuntocero);
        this.tfUdsDescuento.setText(this.cero);
        this.tfUdsMercancia.setText(this.cero);
        this.tfIvaMercancia.requestFocusInWindow();
}//GEN-LAST:event_botonBorrarDescuentosDineroActionPerformed

    private void calcularDescuentoDinero() {
        Double ivaMercancia = this.obtenerDatosCamposTexto(this.tfIvaMercancia);
        Double udsMercancia = this.obtenerDatosCamposTexto(this.tfUdsMercancia);
        Double precioMercancia = this.obtenerDatosCamposTexto(this.tfPrecioMercancia);
        Double ivaDescuento = this.obtenerDatosCamposTexto(this.tfIvaDescuento);
        Double udsDescuento = this.obtenerDatosCamposTexto(this.tfUdsDescuento);
        Double precioDescuento = this.obtenerDatosCamposTexto(this.tfPrecioDescuento);
        //if(udsMercancia == 0.0d)udsMercancia = 1.0d;
        Double totalMercancia
                = udsMercancia * precioMercancia * (1 + ivaMercancia / 100);
        Double totalDescuento = 0.0d;
        //if(udsDescuento == 0.0d) udsDescuento = 1.0d;
        if (udsDescuento > 0.0d) {
            totalDescuento = udsDescuento * precioDescuento * (1 + ivaDescuento / 100);
        }
        //Double totalDescuento =
        //        udsDescuento * precioDescuento * (1+ivaDescuento/100);
        Double totalGeneral = 0.0d;
        if (totalMercancia != 0.0d) {
            totalGeneral = (totalMercancia - totalDescuento) / udsMercancia;
        }

        this.tfFinalDtoDinero.setText(this.formato.format(totalGeneral));
    }

    private void iniciarGui() {
        this.tfIva.setText(this.ceroPuntocero);
        this.tfNeto.setText(this.ceroPuntocero);
        this.tfDto.setText(this.ceroPuntocero);
        this.tfUni.setText(this.cero);
        this.tfDtoUni.setText(this.cero);
        this.tfFinal.setText("0,00 €");
        this.tfQuitarIva.setText(this.ceroPuntocero);
        this.tfPrecioConIva.setText(this.ceroPuntocero);
        this.tfPrecioSinIva.setText("0,00 €");
        this.tfTotalCalculadora.setText("0");
        this.tfIvaDescuento.setText(this.ceroPuntocero);
        this.tfUdsDescuento.setText(this.cero);
        this.tfPrecioDescuento.setText(this.ceroPuntocero);
        this.tfIvaMercancia.setText(this.ceroPuntocero);
        this.tfUdsMercancia.setText(this.cero);
        this.tfPrecioMercancia.setText(this.ceroPuntocero);
        this.tfFinalDtoDinero.setText("0,00 €");
    }

    private Double obtenerDatosCamposTexto(JTextField c) {
        Double dato = 0.0d;
        try {
            dato = Double.parseDouble(c.getText());
        } catch (NumberFormatException ex) {
            c.setText(this.cero);
        }
        return dato;
    }

    private void calcularPrecioFinal() {
        // obtenemos el IVA
        try {
            this.ivaActual = Double.parseDouble(this.tfIva.getText());
        } catch (NumberFormatException ex) {
            this.tfIva.setText(this.ceroPuntocero);
            this.ivaActual = 0.0d;
        }
        // obtenemos el precio neto
        try {
            this.precioNeto
                    = Double.parseDouble(this.tfNeto.getText());
        } catch (NumberFormatException ex) {
            this.tfNeto.setText(this.ceroPuntocero);
            this.precioNeto = 0.0d;
        }
        this.precioFinal = this.precioNeto;
        // obtenemos los descuentos
        double[] descuentos = this.getDescuentos();
        if (descuentos == null) {
            this.tfDto.setText(this.ceroPuntocero);
        }
        // obtenemos las unidades con cargo
        try {
            this.unidades = Integer.parseInt(this.tfUni.getText());
        } catch (NumberFormatException ex) {
            this.tfUni.setText(this.cero);
            this.unidades = 0;
        }
        // obtenemos las unidades sin cargo
        try {
            this.dtoUnidades = Integer.parseInt(this.tfDtoUni.getText());
        } catch (NumberFormatException ex) {
            this.tfDtoUni.setText(this.cero);
            this.dtoUnidades = 0;
        }
        // hacemos los cálculos
        // primero aplicamos todos los descuentos en cadena
        if (descuentos != null && descuentos.length > 0) {
            for (int i = 0; i < descuentos.length; i++) {
                this.precioFinal
                        = this.precioFinal
                        - (this.precioFinal * descuentos[i] / 100);
            }
        }
        // ahora aplicamos el descuento en unidades
        if (this.unidades != 0 && this.dtoUnidades != 0) {
            this.precioFinal
                    = this.precioFinal * this.unidades
                    / (this.unidades + this.dtoUnidades);
        }
        // finalmente aplicamos el IVA
        this.precioFinal = this.precioFinal * (1 + this.ivaActual / 100);

        // presentamos el resultado en el campo 'Precio Final'
        // formateamos el resultado con el objeto 'formato'
        this.tfFinal.setText(this.formato.format(this.precioFinal));
    }

    private double[] getDescuentos() {
        String[] tokens = this.tfDto.getText().split("/");
        if (tokens.length == 0) {
            return null;
        }
        double[] descuentos = new double[tokens.length];
        for (int i = 0; i < tokens.length; i++) {
            try {
                descuentos[i] = Double.parseDouble(tokens[i]);
            } catch (NumberFormatException ex) {
                descuentos = null;
                break;
            }
        }
        return descuentos;
    }

    private void calcularPrecioSinIva() {
        // obtenemos el IVA a quitar
        try {
            this.ivaQuitar = Double.parseDouble(this.tfQuitarIva.getText());
        } catch (NumberFormatException ex) {
            this.tfQuitarIva.setText(this.ceroPuntocero);
            this.ivaQuitar = 0.0d;
        }
        // obtenemos el precio con IVA
        try {
            this.precioConIva
                    = Double.parseDouble(this.tfPrecioConIva.getText());
        } catch (NumberFormatException ex) {
            this.tfPrecioConIva.setText(this.ceroPuntocero);
            this.precioConIva = 0.0d;
        }
        // calculamos el precio sin IVA
        this.precioSinIva = this.precioConIva / (1 + (this.ivaQuitar / 100));
        // presentamos el resultado formateado
        this.tfPrecioSinIva.setText(this.formato.format(this.precioSinIva));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ayudaMenuItem;
    private javax.swing.JButton boton0;
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JButton boton6;
    private javax.swing.JButton boton7;
    private javax.swing.JButton boton8;
    private javax.swing.JButton boton9;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonBorrarDescuentos;
    private javax.swing.JButton botonBorrarParcial;
    private javax.swing.JButton botonBorrarQuitar;
    private javax.swing.JButton botonBorrarTodo;
    private javax.swing.JButton botonComa;
    private javax.swing.JButton botonDividir;
    private javax.swing.JButton botonIgual;
    private javax.swing.JButton botonMasMenos;
    private javax.swing.JButton botonMultiplicar;
    private javax.swing.JButton botonPorCiento;
    private javax.swing.JButton botonRestar;
    private javax.swing.JButton botonSumar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    //private misClases.utilidades.swing.JTextFieldNumeros //jTextFieldNumeros2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel panelCalculadora;
    private javax.swing.JPanel panelDescuentos;
    private javax.swing.JPanel panelSinIva;
    private javax.swing.JTabbedPane tabbedPaneContenedor;
    private javax.swing.JTextField tfDto;
    private javax.swing.JTextField tfDtoUni;
    private javax.swing.JTextField tfFinal;
    private javax.swing.JTextField tfFinalDtoDinero;
    private javax.swing.JTextField tfIva;
    private javax.swing.JTextField tfIvaDescuento;
    private javax.swing.JTextField tfIvaMercancia;
    private javax.swing.JTextField tfNeto;
    private javax.swing.JTextField tfPrecioConIva;
    private javax.swing.JTextField tfPrecioDescuento;
    private javax.swing.JTextField tfPrecioMercancia;
    private javax.swing.JTextField tfPrecioSinIva;
    private javax.swing.JTextField tfQuitarIva;
    private javax.swing.JTextField tfTotalCalculadora;
    private javax.swing.JTextField tfUdsDescuento;
    private javax.swing.JTextField tfUdsMercancia;
    private javax.swing.JTextField tfUni;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    //private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;

    // Variables usadas en el programa
    private final String ceroPuntocero = "0.0";
    private final String cero = "0";
    private double ivaActual = 0.0d;
    private double precioNeto = 0.0d;
    private int unidades = 0;
    private int dtoUnidades = 0;
    private double precioFinal = 0.0d;
    private double ivaQuitar = 0.0d;
    private double precioConIva = 0.0d;
    private double precioSinIva = 0.0d;
    private String operadorActivo = null;
    private double operador1 = 0.0d;
    private double operador2 = 0.0d;
    private boolean primeraOperacion = true;
    private boolean comaActivada = false;
    private final DecimalFormat formato = new DecimalFormat("###,##0.00# €");

    private enum Entradas {
        NINGUNA, DIGITO, OPERADOR, IGUAL, PUNTO
    }
    private Entradas entradaActual = Entradas.NINGUNA;
}
